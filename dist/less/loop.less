.loop(@from, @to, @selector, @splicer, @decorations:always) {

  @f: floor(@from);
  @t: floor(@to);
  @i: @f;

  .loop(@i) when(@i=<@t) {

    .loop-build-selector(@selector, @splicer, @i, @decorations);
    @{s} {
      .loop-mix-in(@selector, @i, @f, @t);
    }

    .loop(@i + 1);
  };

  .loop(@t) {}

  .loop(@f);

}

.loop(@from, @to, @selector) {
  .loop(@from, @to, @selector, '-');
}

// set decorations

.loop-build-selector(@selector, @splicer, @index, @decorations) when(@decorations = always) {
  @s: e('@{selector}@{splicer}@{index}');

}

// or remove decorations

.loop-build-selector(@selector, @splicer, @index, @decorations) when not(@decorations = always) {
  @s: e('@{selector}');

}

//implement this in source files

.loop-mix-in(@selector, @index, @from, @to) {}

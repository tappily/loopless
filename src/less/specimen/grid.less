@import '../loop';

// no decorations

@grid-width: 100%;
@grid-col-gap: 0.8%;
@grid-column-count: 12;
@grid-column-width: (@grid-width - @grid-col-gap * (@grid-column-count - 1)) / @grid-column-count;

.grid-style(@prop, @value) when(@prop = span) {
  width: @value;
}

.grid-style(@prop, @value) when(@prop = offset) {
  margin-left: @value;
}

.grid-span(@prop, @value) {
  @gutter-accumulated: @grid-col-gap * (@value - 1);
  @grid-span-size: round(@grid-column-width * @value + @gutter-accumulated, 2);
  .grid-style(@prop, @grid-span-size);
}

.loop-mix-in(@selector, @index, @from, @to) when (@selector = '.grid') {
  &-span-@{index} {
    .grid-span(span, @index);
  }

  &-offset-@{index} {
    .grid-span(offset, @index);
  }
}

.loop(1, @grid-column-count, '.grid', '', none);
